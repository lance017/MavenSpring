<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--简单的配置-->
    <!--class:bean的全类名，必须存在无参数的构造方法-->
    <!--id:标识容器中bean，唯一-->
    <bean id="helloworld" class="com.atguigu.spring.beans.Helloworld">
        <property name="name" value="Spring"></property>
    </bean>

    <!--通过构造方法来配置 bean 的属性 -->
    <!--可以指定参数的位置和参数的类型来区分重载的构造器 -->
    <bean id="car" class="com.atguigu.spring.beans.Car">
        <constructor-arg value="Audi" index="0"></constructor-arg>
        <constructor-arg value="shanghai" index="1"></constructor-arg>
        <constructor-arg type="double">
            <value>3000000</value>
        </constructor-arg>
    </bean>
    <!--如果包含特殊的符号，使用 <![CDATA[值]]> 包裹 -->
    <bean id="car2" class="com.atguigu.spring.beans.Car">
        <constructor-arg value="Baoma" type="java.lang.String"></constructor-arg>
        <constructor-arg type="java.lang.String">
            <value><![CDATA[<shanghai^>]]></value>
        </constructor-arg>
        <constructor-arg value="240" type="int"></constructor-arg>
    </bean>

    <!--bean 之间的相互引用，使用 ref 来指定引用的 id ,两种使用方法-->
    <bean id="person" class="com.atguigu.spring.beans.Person">
        <property name="name" value="Tom"></property>
        <property name="age" value="24"></property>

        <!--<property name="car" ref="car2"></property>-->
        <property name="car">
            <ref bean="car2"></ref>
        </property>
    </bean>

    <!--内部 bean-->
    <bean id="person1" class="com.atguigu.spring.beans.Person">
        <property name="name" value="Tom"></property>
        <property name="age" value="24"></property>
        <property name="car">
            <bean class="com.atguigu.spring.beans.Car">
                <constructor-arg value="Ford"></constructor-arg>
                <constructor-arg value="changan"></constructor-arg>
                <constructor-arg value="200000" type="double">
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!--测试配置集合属性-->
    <bean id="person3" class="com.atguigu.spring.beans.collections.Person">
        <property name="name" value="Mike"></property>
        <property name="age" value="27"></property>
        <property name="cars">
            <!--使用 list 为集合赋值-->
            <list>
                <ref bean="car"></ref>
                <ref bean="car2"></ref>
                <!--内部 bean-->
                <bean class="com.atguigu.spring.beans.Car">
                    <constructor-arg value="Ford"></constructor-arg>
                    <constructor-arg value="changan"></constructor-arg>
                    <constructor-arg value="200000" type="double">
                    </constructor-arg>
                </bean>
            </list>
        </property>
    </bean>

    <!--测试配置 Map 属性-->
    <bean id="newPerson" class="com.atguigu.spring.beans.collections.NewPerson">
        <property name="name" value="Mike"></property>
        <property name="age" value="27"></property>
        <property name="cars">
            <!--使用 map 为集合赋值-->
            <map>
                <entry key="AA" value-ref="car"></entry>
                <entry key="BB" value-ref="car2"></entry>
            </map>
        </property>
    </bean>

    <!--配置 properties 属性的值-->
    <bean id="dataSource" class="com.atguigu.spring.beans.collections.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">123456</prop>
                <prop key="jdbcUrl">jdbc:mysql://test</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>


    <!--配置独立的集合 bean, 方便多个 bean 引用，需要导入 util 命名空间-->
    <util:list id="cars">
        <ref bean="car"></ref>
        <ref bean="car2"></ref>
    </util:list>

</beans>